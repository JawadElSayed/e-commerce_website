-- MySQL Script generated by MySQL Workbench
-- Wed Sep 21 23:02:45 2022
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema ecommercedb
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema ecommercedb
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `ecommercedb` DEFAULT CHARACTER SET utf8 ;
USE `ecommercedb` ;

-- -----------------------------------------------------
-- Table `ecommercedb`.`user_type`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `ecommercedb`.`user_type` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `type` VARCHAR(45) NULL,
  PRIMARY KEY (`id`));


-- -----------------------------------------------------
-- Table `ecommercedb`.`users`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `ecommercedb`.`users` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `email` VARCHAR(255) NULL,
  `password` VARCHAR(255) NULL,
  `name` VARCHAR(255) NULL,
  `username` VARCHAR(255) NULL,
  `user_type` INT NOT NULL,
  `profile` VARCHAR(255) NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_clients_user_type1_idx` (`user_type` ASC),
  CONSTRAINT `fk_clients_user_type1`
    FOREIGN KEY (`user_type`)
    REFERENCES `ecommercedb`.`user_type` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);


-- -----------------------------------------------------
-- Table `ecommercedb`.`categories`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `ecommercedb`.`categories` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `category_name` VARCHAR(255) NULL,
  PRIMARY KEY (`id`));


-- -----------------------------------------------------
-- Table `ecommercedb`.`products`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `ecommercedb`.`products` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `product_name` VARCHAR(45) NULL,
  `about` TEXT NULL,
  `created_at` TIMESTAMP NULL,
  `price` INT NULL,
  `old_price` INT NULL,
  `category_id` INT NOT NULL,
  `seller_id` INT NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_products_categories1_idx` (`category_id` ASC),
  INDEX `fk_products_users1_idx` (`seller_id` ASC),
  CONSTRAINT `fk_products_categories1`
    FOREIGN KEY (`category_id`)
    REFERENCES `ecommercedb`.`categories` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_products_users1`
    FOREIGN KEY (`seller_id`)
    REFERENCES `ecommercedb`.`users` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);


-- -----------------------------------------------------
-- Table `ecommercedb`.`favorite`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `ecommercedb`.`favorite` (
  `client_id` INT NOT NULL,
  `product_id` INT NOT NULL,
  PRIMARY KEY (`client_id`, `product_id`),
  INDEX `fk_clients_has_products_products1_idx` (`product_id` ASC),
  INDEX `fk_clients_has_products_clients_idx` (`client_id` ASC),
  CONSTRAINT `fk_clients_has_products_clients`
    FOREIGN KEY (`client_id`)
    REFERENCES `ecommercedb`.`users` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_clients_has_products_products1`
    FOREIGN KEY (`product_id`)
    REFERENCES `ecommercedb`.`products` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);


-- -----------------------------------------------------
-- Table `ecommercedb`.`cart`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `ecommercedb`.`cart` (
  `client_id` INT NOT NULL,
  `product_id` INT NOT NULL,
  `quantity` INT NULL,
  `created_at` TIMESTAMP NULL,
  PRIMARY KEY (`client_id`, `product_id`),
  INDEX `fk_clients_has_products_products2_idx` (`product_id` ASC),
  INDEX `fk_clients_has_products_clients1_idx` (`client_id` ASC),
  CONSTRAINT `fk_clients_has_products_clients1`
    FOREIGN KEY (`client_id`)
    REFERENCES `ecommercedb`.`users` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_clients_has_products_products2`
    FOREIGN KEY (`product_id`)
    REFERENCES `ecommercedb`.`products` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);


-- -----------------------------------------------------
-- Table `ecommercedb`.`wish_list`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `ecommercedb`.`wish_list` (
  `client_id` INT NOT NULL,
  `product_id` INT NOT NULL,
  `created_ad` TIMESTAMP NULL,
  PRIMARY KEY (`client_id`, `product_id`),
  INDEX `fk_clients_has_products_products3_idx` (`product_id` ASC),
  INDEX `fk_clients_has_products_clients2_idx` (`client_id` ASC),
  CONSTRAINT `fk_clients_has_products_clients2`
    FOREIGN KEY (`client_id`)
    REFERENCES `ecommercedb`.`users` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_clients_has_products_products3`
    FOREIGN KEY (`product_id`)
    REFERENCES `ecommercedb`.`products` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);


-- -----------------------------------------------------
-- Table `ecommercedb`.`discount_codes`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `ecommercedb`.`discount_codes` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `discount_code` VARCHAR(255) NULL,
  `discount_amount` VARCHAR(45) NULL,
  `created_at` TIMESTAMP NULL,
  `end_at` DATETIME NULL,
  `user_id` INT NOT NULL,
  `product_id` INT NOT NULL,
  PRIMARY KEY (`id`, `user_id`, `product_id`),
  INDEX `fk_discount_codes_users1_idx` (`user_id` ASC),
  INDEX `fk_discount_codes_products1_idx` (`product_id` ASC),
  CONSTRAINT `fk_discount_codes_users1`
    FOREIGN KEY (`user_id`)
    REFERENCES `ecommercedb`.`users` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_discount_codes_products1`
    FOREIGN KEY (`product_id`)
    REFERENCES `ecommercedb`.`products` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);


-- -----------------------------------------------------
-- Table `ecommercedb`.`reset_password`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `ecommercedb`.`reset_password` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `reset_password` VARCHAR(255) NULL,
  `created_at` TIMESTAMP NULL,
  `client_id` INT NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_reset_password_clients1_idx` (`client_id` ASC),
  CONSTRAINT `fk_reset_password_clients1`
    FOREIGN KEY (`client_id`)
    REFERENCES `ecommercedb`.`users` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);


-- -----------------------------------------------------
-- Table `ecommercedb`.`images`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `ecommercedb`.`images` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `image` VARCHAR(255) NULL,
  `product_id` INT NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_images_products1_idx` (`product_id` ASC),
  CONSTRAINT `fk_images_products1`
    FOREIGN KEY (`product_id`)
    REFERENCES `ecommercedb`.`products` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);


-- -----------------------------------------------------
-- Table `ecommercedb`.`checkouts`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `ecommercedb`.`checkouts` (
  `client_id` INT NOT NULL,
  `product_id` INT NOT NULL,
  `quantity` INT NULL,
  `created_at` TIMESTAMP NULL,
  PRIMARY KEY (`client_id`, `product_id`),
  INDEX `fk_clients_has_products_products2_idx` (`product_id` ASC),
  INDEX `fk_clients_has_products_clients1_idx` (`client_id` ASC),
  CONSTRAINT `fk_clients_has_products_clients10`
    FOREIGN KEY (`client_id`)
    REFERENCES `ecommercedb`.`users` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_clients_has_products_products20`
    FOREIGN KEY (`product_id`)
    REFERENCES `ecommercedb`.`products` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);


-- -----------------------------------------------------
-- Table `ecommercedb`.`views`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `ecommercedb`.`views` (
  `product_id` INT NOT NULL,
  `viewer_id` INT NOT NULL,
  PRIMARY KEY (`product_id`, `viewer_id`),
  INDEX `fk_products_has_clients_clients1_idx` (`viewer_id` ASC),
  INDEX `fk_products_has_clients_products1_idx` (`product_id` ASC),
  CONSTRAINT `fk_products_has_clients_products1`
    FOREIGN KEY (`product_id`)
    REFERENCES `ecommercedb`.`products` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_products_has_clients_clients1`
    FOREIGN KEY (`viewer_id`)
    REFERENCES `ecommercedb`.`users` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);


-- -----------------------------------------------------
-- Table `ecommercedb`.`ads`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `ecommercedb`.`ads` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `image` VARCHAR(255) NULL,
  `seller_id` INT NOT NULL,
  `title` VARCHAR(255) NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_ads_users1_idx` (`seller_id` ASC),
  CONSTRAINT `fk_ads_users1`
    FOREIGN KEY (`seller_id`)
    REFERENCES `ecommercedb`.`users` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);


-- -----------------------------------------------------
-- Table `ecommercedb`.`vouchers`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `ecommercedb`.`vouchers` (
  `client_id` INT NOT NULL,
  `client_id1` INT NOT NULL,
  `voucher_code` VARCHAR(45) NULL,
  `voucher_amount` INT NULL,
  `used` INT NULL,
  PRIMARY KEY (`client_id`, `client_id1`),
  INDEX `fk_clients_has_clients_clients2_idx` (`client_id1` ASC),
  INDEX `fk_clients_has_clients_clients1_idx` (`client_id` ASC),
  CONSTRAINT `fk_clients_has_clients_clients1`
    FOREIGN KEY (`client_id`)
    REFERENCES `ecommercedb`.`users` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_clients_has_clients_clients2`
    FOREIGN KEY (`client_id1`)
    REFERENCES `ecommercedb`.`users` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);


-- -----------------------------------------------------
-- Table `ecommercedb`.`chat`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `ecommercedb`.`chat` (
  `client_id` INT NOT NULL,
  `seller_id` INT NOT NULL,
  `massage` TEXT NULL,
  `created_at` TIMESTAMP NULL,
  `product_id` INT NOT NULL,
  PRIMARY KEY (`client_id`, `seller_id`),
  INDEX `fk_clients_has_clients_clients4_idx` (`seller_id` ASC),
  INDEX `fk_clients_has_clients_clients3_idx` (`client_id` ASC),
  INDEX `fk_clients_has_clients_products1_idx` (`product_id` ASC),
  CONSTRAINT `fk_clients_has_clients_clients3`
    FOREIGN KEY (`client_id`)
    REFERENCES `ecommercedb`.`users` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_clients_has_clients_clients4`
    FOREIGN KEY (`seller_id`)
    REFERENCES `ecommercedb`.`users` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_clients_has_clients_products1`
    FOREIGN KEY (`product_id`)
    REFERENCES `ecommercedb`.`products` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);


-- -----------------------------------------------------
-- Table `ecommercedb`.`lottery`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `ecommercedb`.`lottery` (
  `client_id` INT NOT NULL,
  `admin_id` INT NOT NULL,
  `first` INT NULL,
  `second` INT NULL,
  `third` INT NULL,
  `closed` INT NULL,
  PRIMARY KEY (`client_id`, `admin_id`),
  INDEX `fk_users_has_users_users2_idx` (`admin_id` ASC),
  INDEX `fk_users_has_users_users1_idx` (`client_id` ASC),
  CONSTRAINT `fk_users_has_users_users1`
    FOREIGN KEY (`client_id`)
    REFERENCES `ecommercedb`.`users` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_users_has_users_users2`
    FOREIGN KEY (`admin_id`)
    REFERENCES `ecommercedb`.`users` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);


-- -----------------------------------------------------
-- Table `ecommercedb`.`ban`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `ecommercedb`.`ban` (
  `admin_id` INT NOT NULL,
  `client_id` INT NOT NULL,
  PRIMARY KEY (`admin_id`, `client_id`),
  INDEX `fk_users_has_users_users4_idx` (`client_id` ASC),
  INDEX `fk_users_has_users_users3_idx` (`admin_id` ASC),
  CONSTRAINT `fk_users_has_users_users3`
    FOREIGN KEY (`admin_id`)
    REFERENCES `ecommercedb`.`users` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_users_has_users_users4`
    FOREIGN KEY (`client_id`)
    REFERENCES `ecommercedb`.`users` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);


-- -----------------------------------------------------
-- Table `ecommercedb`.`clients_categories`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `ecommercedb`.`clients_categories` (
  `category_id` INT NOT NULL,
  `uses_id` INT NOT NULL,
  PRIMARY KEY (`category_id`, `uses_id`),
  INDEX `fk_categories_has_users_users1_idx` (`uses_id` ASC),
  INDEX `fk_categories_has_users_categories1_idx` (`category_id` ASC),
  CONSTRAINT `fk_categories_has_users_categories1`
    FOREIGN KEY (`category_id`)
    REFERENCES `ecommercedb`.`categories` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_categories_has_users_users1`
    FOREIGN KEY (`uses_id`)
    REFERENCES `ecommercedb`.`users` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
